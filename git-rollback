#!/bin/sh

#This command rolls back commits
# Option -k or --keep, keeps files staged, default is no
# Option -w or --wipe, wipes files from a rollback all together, default is no

wipe="no"
keep="no"

rollbackLocal () 
{ 
    if [ "$wipe" == "yes" ]
    then
	eval git reset --hard HEAD^;
    else
	eval git reset --soft HEAD^;
	if [ "$keep" == "no" ]
	then
	  eval git reset;
	fi
    fi   
}

parseLocalArgs ()
{
    while test $# != 0
    do
	case "$1" in
            --keep | -k )
		keep='yes'
		shift
		;;
            --wipe | -w )
		wipe='yes'
		if [ "$keep" == "yes" ]; then
		    echo "Wipe will not keep any files to be staged. Ignoring keep."
		fi
		shift
		;;
	esac
    done
}

case $1 in
'local')
    echo "You are rolling back your local commit."
    shift
    parseLocalArgs $@
    rollbackLocal
    ;;

'remote')
    if test -z $2; then
        branch='master';
    else
        branch=$2;
    fi
    #TODO: automate these conditions
    echo "Is the branch you are currently on the same and up-to-date with the branch '$branch' you want to undo the commit from? (y/n)"
    read input_var
    case $input_var in
    'y' )
        echo "You are rolling back your remote & local commit. You want to roll back to:"
        commit=`git log --pretty=oneline --format=%H --max-count=2 | tail -n 1`
        echo $commit
        git push -f origin $commit:$branch &&
        git reset --soft HEAD^ &&
        git reset
        ;;
    'n' ) echo "Please update your branch first."; exit;;
    esac
    ;;

'')
    echo "Please specify 'local' or 'remote' option."

esac

